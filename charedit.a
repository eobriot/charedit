	type = 64

	* = $c000
	!to "charedit.prg", cbm
	
;;; kernal calls
chrout 	=	$ffd2
plot	=	$fff0
getin	=	$ffe4

	
	
main	jsr clrscr
	jsr dspptn
	jsr wait
	rts

;;; routine to clear screen
clrscr 	lda #$93
	jsr chrout
	rts

wait	jsr getin
	cmp #0
	beq wait
	rts

tstbit 				;need to load a with the value to test
	tay
	and chrptn, x
	beq -			;bit is of
	lda #113
	jmp +
-	lda #32
+				; is cursor on this spot?
	pha
	tya			; get back the initial A value
	cmp cx
	bne prt
	txa			;x is ok, and y?
	cmp cy
	bne prt
	pla			;got it!
	ora #$80		; reverse video
prt	pla
prt2	jsr chrout
	rts
	
!macro testbit .val{
	lda #.val
	jsr tstbit
	}
	
dspptn
	ldx #0
	ldy #0
	clc
	jsr plot		;top left corner of screen
	stx row
dorow	
	+testbit 1		;Test each bit of row.
	+testbit 2
	+testbit 4
	+testbit 8
	+testbit 16
	+testbit 32
	+testbit 64
	+testbit 128
	inc row
	ldx row
	cpx #8			;are we done?
	beq exit
	ldy #0
	clc
	jsr plot		;advance to next line
	jmp dorow
exit
	rts
	
	
;;; routine to display char pattern on screen
;; dspptn	ldx #0
;; 	ldy #0
;; 	clc
;; 	jsr plot		;Starting top left corner
;; 	stx row			;first row
;; dorow	lda chrptn,x		;get byte for row
;; 	sta wrk			
;; nxt	lsr wrk			;get bit
;; 	bcs on
;; 	lda #32			; bit off
;; 	jsr chrout
;; 	jmp +			; jmp to next row?
;; on	lda #113		;bit on
;; 	jsr chrout
;; +	iny			; get next bit
;; 	cpy #8			; are we done?
;; 	beq nxtrow
;; 	jmp nxt			;next char
;; nxtrow	inc row
;; 	ldy row			;plot on next row	
;; 	ldx #0
;; 	clc
;; 	jsr plot
;; 	cpy #8			;are we done for all the row?
;; 	beq exit
;; 	tya
;; 	tax			;set index of row
;; 	ldy #0			;ready for first byte
;; 	jmp dorow
;; exit	rts
	
;;; vars
chrptn	!byte $4,0,$ff,0,0,0,0,0
wrk	!byte 0
row	!byte 0			;which row is being drawn
cx	!byte 1			; position of cursor. X is 1, 2 4, 8 ...
cy 	!byte 0